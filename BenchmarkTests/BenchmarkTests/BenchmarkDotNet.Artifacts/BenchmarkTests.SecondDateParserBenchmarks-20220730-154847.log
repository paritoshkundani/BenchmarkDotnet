// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\temp\pluralsight\benchmarkDotNet\benchmarktests\BenchmarkTests\bin\Release\net6.0\7a173911-e3c6-4b8b-a552-fb0eb510d6c5
// command took 2.98s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\temp\pluralsight\benchmarkDotNet\benchmarktests\BenchmarkTests\bin\Release\net6.0\7a173911-e3c6-4b8b-a552-fb0eb510d6c5
// command took 14.31s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\temp\pluralsight\benchmarkDotNet\benchmarktests\BenchmarkTests\bin\Release\net6.0\7a173911-e3c6-4b8b-a552-fb0eb510d6c5
// command took 3.78s and exited with 0
// ***** Done, took 00:00:21 (21.28 sec)   *****
// Found 1 benchmarks:
//   SecondDateParserBenchmarks.GetYearFromDateTime: DefaultJob

// **************************
// Benchmark: SecondDateParserBenchmarks.GetYearFromDateTime: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "7a173911-e3c6-4b8b-a552-fb0eb510d6c5.dll" --benchmarkName "BenchmarkTests.SecondDateParserBenchmarks.GetYearFromDateTime" --job "Default" --benchmarkId 0 in C:\temp\pluralsight\benchmarkDotNet\benchmarktests\BenchmarkTests\bin\Release\net6.0\7a173911-e3c6-4b8b-a552-fb0eb510d6c5\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.2 (6.0.222.6406), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 266700.00 ns, 266.7000 us/op
WorkloadJitting  1: 1 op, 6971900.00 ns, 6.9719 ms/op

OverheadJitting  2: 16 op, 377700.00 ns, 23.6062 us/op
WorkloadJitting  2: 16 op, 1066100.00 ns, 66.6312 us/op

WorkloadPilot    1: 16 op, 17900.00 ns, 1.1187 us/op
WorkloadPilot    2: 32 op, 22700.00 ns, 709.3750 ns/op
WorkloadPilot    3: 64 op, 53500.00 ns, 835.9375 ns/op
WorkloadPilot    4: 128 op, 83900.00 ns, 655.4688 ns/op
WorkloadPilot    5: 256 op, 146300.00 ns, 571.4844 ns/op
WorkloadPilot    6: 512 op, 237900.00 ns, 464.6484 ns/op
WorkloadPilot    7: 1024 op, 501500.00 ns, 489.7461 ns/op
WorkloadPilot    8: 2048 op, 1019900.00 ns, 497.9980 ns/op
WorkloadPilot    9: 4096 op, 2667900.00 ns, 651.3428 ns/op
WorkloadPilot   10: 8192 op, 4103800.00 ns, 500.9521 ns/op
WorkloadPilot   11: 16384 op, 6678600.00 ns, 407.6294 ns/op
WorkloadPilot   12: 32768 op, 10429700.00 ns, 318.2892 ns/op
WorkloadPilot   13: 65536 op, 19384200.00 ns, 295.7794 ns/op
WorkloadPilot   14: 131072 op, 40591700.00 ns, 309.6901 ns/op
WorkloadPilot   15: 262144 op, 67830700.00 ns, 258.7536 ns/op
WorkloadPilot   16: 524288 op, 119748200.00 ns, 228.4016 ns/op
WorkloadPilot   17: 1048576 op, 217241900.00 ns, 207.1780 ns/op
WorkloadPilot   18: 2097152 op, 451823200.00 ns, 215.4461 ns/op
WorkloadPilot   19: 4194304 op, 857623800.00 ns, 204.4734 ns/op

OverheadWarmup   1: 4194304 op, 11223600.00 ns, 2.6759 ns/op
OverheadWarmup   2: 4194304 op, 10287600.00 ns, 2.4528 ns/op
OverheadWarmup   3: 4194304 op, 9898900.00 ns, 2.3601 ns/op
OverheadWarmup   4: 4194304 op, 11509000.00 ns, 2.7440 ns/op
OverheadWarmup   5: 4194304 op, 10372400.00 ns, 2.4730 ns/op
OverheadWarmup   6: 4194304 op, 11172000.00 ns, 2.6636 ns/op
OverheadWarmup   7: 4194304 op, 11248800.00 ns, 2.6819 ns/op
OverheadWarmup   8: 4194304 op, 11550100.00 ns, 2.7538 ns/op
OverheadWarmup   9: 4194304 op, 10687700.00 ns, 2.5481 ns/op

OverheadActual   1: 4194304 op, 9851800.00 ns, 2.3489 ns/op
OverheadActual   2: 4194304 op, 9001400.00 ns, 2.1461 ns/op
OverheadActual   3: 4194304 op, 11153900.00 ns, 2.6593 ns/op
OverheadActual   4: 4194304 op, 9530800.00 ns, 2.2723 ns/op
OverheadActual   5: 4194304 op, 9420900.00 ns, 2.2461 ns/op
OverheadActual   6: 4194304 op, 9995700.00 ns, 2.3832 ns/op
OverheadActual   7: 4194304 op, 10681000.00 ns, 2.5465 ns/op
OverheadActual   8: 4194304 op, 11952700.00 ns, 2.8497 ns/op
OverheadActual   9: 4194304 op, 9613800.00 ns, 2.2921 ns/op
OverheadActual  10: 4194304 op, 10931200.00 ns, 2.6062 ns/op
OverheadActual  11: 4194304 op, 11655900.00 ns, 2.7790 ns/op
OverheadActual  12: 4194304 op, 10626500.00 ns, 2.5336 ns/op
OverheadActual  13: 4194304 op, 10136200.00 ns, 2.4167 ns/op
OverheadActual  14: 4194304 op, 11086700.00 ns, 2.6433 ns/op
OverheadActual  15: 4194304 op, 11483100.00 ns, 2.7378 ns/op
OverheadActual  16: 4194304 op, 10894000.00 ns, 2.5973 ns/op
OverheadActual  17: 4194304 op, 9127600.00 ns, 2.1762 ns/op
OverheadActual  18: 4194304 op, 11492400.00 ns, 2.7400 ns/op
OverheadActual  19: 4194304 op, 11600400.00 ns, 2.7658 ns/op
OverheadActual  20: 4194304 op, 9551900.00 ns, 2.2774 ns/op

WorkloadWarmup   1: 4194304 op, 870804500.00 ns, 207.6160 ns/op
WorkloadWarmup   2: 4194304 op, 862118300.00 ns, 205.5450 ns/op
WorkloadWarmup   3: 4194304 op, 853730900.00 ns, 203.5453 ns/op
WorkloadWarmup   4: 4194304 op, 860881200.00 ns, 205.2501 ns/op
WorkloadWarmup   5: 4194304 op, 865710600.00 ns, 206.4015 ns/op
WorkloadWarmup   6: 4194304 op, 855514700.00 ns, 203.9706 ns/op
WorkloadWarmup   7: 4194304 op, 873592800.00 ns, 208.2808 ns/op
WorkloadWarmup   8: 4194304 op, 882788300.00 ns, 210.4731 ns/op
WorkloadWarmup   9: 4194304 op, 875539700.00 ns, 208.7449 ns/op

// BeforeActualRun
WorkloadActual   1: 4194304 op, 875984500.00 ns, 208.8510 ns/op
WorkloadActual   2: 4194304 op, 857064300.00 ns, 204.3401 ns/op
WorkloadActual   3: 4194304 op, 855587900.00 ns, 203.9881 ns/op
WorkloadActual   4: 4194304 op, 860030700.00 ns, 205.0473 ns/op
WorkloadActual   5: 4194304 op, 848171000.00 ns, 202.2197 ns/op
WorkloadActual   6: 4194304 op, 865753800.00 ns, 206.4118 ns/op
WorkloadActual   7: 4194304 op, 847738600.00 ns, 202.1166 ns/op
WorkloadActual   8: 4194304 op, 862790200.00 ns, 205.7052 ns/op
WorkloadActual   9: 4194304 op, 882676200.00 ns, 210.4464 ns/op
WorkloadActual  10: 4194304 op, 886741800.00 ns, 211.4157 ns/op
WorkloadActual  11: 4194304 op, 860416900.00 ns, 205.1394 ns/op
WorkloadActual  12: 4194304 op, 854543400.00 ns, 203.7390 ns/op
WorkloadActual  13: 4194304 op, 853443200.00 ns, 203.4767 ns/op
WorkloadActual  14: 4194304 op, 869631600.00 ns, 207.3363 ns/op
WorkloadActual  15: 4194304 op, 906072900.00 ns, 216.0246 ns/op

// AfterActualRun
WorkloadResult   1: 4194304 op, 865330750.00 ns, 206.3109 ns/op
WorkloadResult   2: 4194304 op, 846410550.00 ns, 201.8000 ns/op
WorkloadResult   3: 4194304 op, 844934150.00 ns, 201.4480 ns/op
WorkloadResult   4: 4194304 op, 849376950.00 ns, 202.5072 ns/op
WorkloadResult   5: 4194304 op, 837517250.00 ns, 199.6797 ns/op
WorkloadResult   6: 4194304 op, 855100050.00 ns, 203.8717 ns/op
WorkloadResult   7: 4194304 op, 837084850.00 ns, 199.5766 ns/op
WorkloadResult   8: 4194304 op, 852136450.00 ns, 203.1652 ns/op
WorkloadResult   9: 4194304 op, 872022450.00 ns, 207.9064 ns/op
WorkloadResult  10: 4194304 op, 876088050.00 ns, 208.8757 ns/op
WorkloadResult  11: 4194304 op, 849763150.00 ns, 202.5993 ns/op
WorkloadResult  12: 4194304 op, 843889650.00 ns, 201.1990 ns/op
WorkloadResult  13: 4194304 op, 842789450.00 ns, 200.9367 ns/op
WorkloadResult  14: 4194304 op, 858977850.00 ns, 204.7963 ns/op
GC:  0 0 0 480 4194304
Threading:  0 0 4194304

// AfterAll
// Benchmark Process 99556 has exited with code 0.

Mean = 203.191 ns, StdErr = 0.769 ns (0.38%), N = 14, StdDev = 2.876 ns
Min = 199.577 ns, Q1 = 201.261 ns, Median = 202.553 ns, Q3 = 204.565 ns, Max = 208.876 ns
IQR = 3.304 ns, LowerFence = 196.305 ns, UpperFence = 209.521 ns
ConfidenceInterval = [199.946 ns; 206.436 ns] (CI 99.9%), Margin = 3.245 ns (1.60% of Mean)
Skewness = 0.62, Kurtosis = 2.11, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\BenchmarkTests.SecondDateParserBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\BenchmarkTests.SecondDateParserBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\BenchmarkTests.SecondDateParserBenchmarks-report.html

// * Detailed results *
SecondDateParserBenchmarks.GetYearFromDateTime: DefaultJob
Runtime = .NET 6.0.2 (6.0.222.6406), X64 RyuJIT; GC = Concurrent Workstation
Mean = 203.191 ns, StdErr = 0.769 ns (0.38%), N = 14, StdDev = 2.876 ns
Min = 199.577 ns, Q1 = 201.261 ns, Median = 202.553 ns, Q3 = 204.565 ns, Max = 208.876 ns
IQR = 3.304 ns, LowerFence = 196.305 ns, UpperFence = 209.521 ns
ConfidenceInterval = [199.946 ns; 206.436 ns] (CI 99.9%), Margin = 3.245 ns (1.60% of Mean)
Skewness = 0.62, Kurtosis = 2.11, MValue = 2
-------------------- Histogram --------------------
[198.010 ns ; 204.428 ns) | @@@@@@@@@@
[204.428 ns ; 209.669 ns) | @@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1826 (21H1/May2021Update)
Intel Core i5-8250U CPU 1.60GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK=6.0.200
  [Host]     : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT
  DefaultJob : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT


|              Method |     Mean |   Error |  StdDev | Rank | Allocated |
|-------------------- |---------:|--------:|--------:|-----:|----------:|
| GetYearFromDateTime | 203.2 ns | 3.24 ns | 2.88 ns |    1 |         - |

// * Hints *
Outliers
  SecondDateParserBenchmarks.GetYearFromDateTime: Default -> 1 outlier  was  removed (216.02 ns)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ns      : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:25 (25.52 sec), executed benchmarks: 1

Global total time: 00:00:46 (46.82 sec), executed benchmarks: 1
// * Artifacts cleanup *
